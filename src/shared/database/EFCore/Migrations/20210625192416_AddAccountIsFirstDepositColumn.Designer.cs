// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ourbank.DBContext;

namespace ourbank.src.shared.database.EFCore.Migrations
{
    [DbContext(typeof(DBContext.DBContext))]
    [Migration("20210625192416_AddAccountIsFirstDepositColumn")]
    partial class AddAccountIsFirstDepositColumn
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.7")
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.IdentityByDefaultColumn);

            modelBuilder.Entity("ourbank.entities.Account", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("text");

                    b.Property<string>("account_number")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<decimal>("balance")
                        .HasColumnType("numeric");

                    b.Property<string>("bank_branch")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp");

                    b.Property<bool>("isFirstDeposit")
                        .HasColumnType("boolean");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("timestamp");

                    b.HasKey("id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("ourbank.entities.User", b =>
                {
                    b.Property<string>("id")
                        .HasColumnType("text");

                    b.Property<string>("accountId")
                        .HasColumnType("text")
                        .HasColumnName("account_id");

                    b.Property<string>("avatar_url")
                        .HasColumnType("text");

                    b.Property<DateTime>("created_at")
                        .HasColumnType("timestamp");

                    b.Property<string>("email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<DateTime>("updated_at")
                        .HasColumnType("timestamp");

                    b.HasKey("id");

                    b.HasIndex("accountId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("ourbank.entities.User", b =>
                {
                    b.HasOne("ourbank.entities.Account", "account")
                        .WithOne();

                    b.Navigation("account");
                });
#pragma warning restore 612, 618
        }
    }
}
